/*----- PROTECTED REGION ID(ArmenMotorsStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        ArmenMotorsStateMachine.cpp
//
// description : State machine file for the ArmenMotors class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <ArmenMotors.h>

/*----- PROTECTED REGION END -----*/	//	ArmenMotors::ArmenMotorsStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace ArmenMotors_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : ArmenMotors::is_PowerOn_allowed()
 *	Description : Execution allowed for PowerOn attribute
 */
//--------------------------------------------------------
bool ArmenMotors::is_PowerOn_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for PowerOn command.
	/*----- PROTECTED REGION ID(ArmenMotors::PowerOnStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	ArmenMotors::PowerOnStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : ArmenMotors::is_MotionLeft_allowed()
 *	Description : Execution allowed for MotionLeft attribute
 */
//--------------------------------------------------------
bool ArmenMotors::is_MotionLeft_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for MotionLeft command.
	/*----- PROTECTED REGION ID(ArmenMotors::MotionLeftStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	ArmenMotors::MotionLeftStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : ArmenMotors::is_MotionRight_allowed()
 *	Description : Execution allowed for MotionRight attribute
 */
//--------------------------------------------------------
bool ArmenMotors::is_MotionRight_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for MotionRight command.
	/*----- PROTECTED REGION ID(ArmenMotors::MotionRightStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	ArmenMotors::MotionRightStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : ArmenMotors::is_Stop_allowed()
 *	Description : Execution allowed for Stop attribute
 */
//--------------------------------------------------------
bool ArmenMotors::is_Stop_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Stop command.
	/*----- PROTECTED REGION ID(ArmenMotors::StopStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	ArmenMotors::StopStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : ArmenMotors::is_TestPing_allowed()
 *	Description : Execution allowed for TestPing attribute
 */
//--------------------------------------------------------
bool ArmenMotors::is_TestPing_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for TestPing command.
	/*----- PROTECTED REGION ID(ArmenMotors::TestPingStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	ArmenMotors::TestPingStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(ArmenMotors::ArmenMotorsStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	ArmenMotors::ArmenMotorsStateAllowed.AdditionalMethods

}	//	End of namespace
